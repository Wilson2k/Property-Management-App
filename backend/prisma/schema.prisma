// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int        @id @default(autoincrement())
  firstName  String     @db.Text
  lastName   String     @db.Text
  email      String     @unique @db.Text
  password   String     @db.Text
  properties Property[]
  tenants    Tenant[]
  leases     Lease[]
}

model Tenant {
  id         Int        @id @default(autoincrement())
  firstName  String     @db.Text
  lastName   String     @db.Text
  email      String     @unique @db.Text
  phone      String     @unique @db.Text
  user       User       @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade )
  userId     Int
  properties Property[]
  leases     Lease[]
  tickets    Ticket[]
}

model Lease {
  id          Int      @id @default(autoincrement())
  startDate   DateTime @db.Date
  endDate     DateTime @db.Date
  months      Int      @db.Integer
  monthlyRent Decimal  @db.Money
  tenant      Tenant   @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  tenantId    Int
  property    Property @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  propertyId  Int
  owner       User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId     Int

  @@unique([tenantId, propertyId])
}

model Ticket {
  id         Int       @id @default(autoincrement())
  type       String    @db.Text
  open       Boolean   @default(true)
  details    String    @db.Text
  openDate   DateTime  @db.Date
  closeDate  DateTime? @db.Date
  tenant     Tenant    @relation(fields: [tenantId], references: [id], onDelete: Cascade, onUpdate: Cascade )
  tenantId   Int
  property   Property  @relation(fields: [propertyId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  propertyId Int
}

model Property {
  id      Int      @id @default(autoincrement())
  address String   @db.Text
  city    String   @db.Text
  state   String   @db.Text
  type    String   @db.Text
  size    Int
  images  String[] @db.Text
  owner   User     @relation(fields: [ownerId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  ownerId Int
  tenants Tenant[]
  tickets Ticket[]
  leases  Lease[]

  @@unique([address, city, state])
}
